{"questions": [
    {
        "difficulty": "3",
        "question": "What is Agile model?",
        "answers": [
            "focusing on delivering the entire project at once",
            "it same as plan-driven process",
            "Agile is a time-boxed, iterative approach that delivers software incrementally, prioritizing user functionality and continuously delivering it in short cycles",
            "Agile is a method without prioritizing user functionality"
        ],
        "correct_ans": "Agile is a time-boxed, iterative approach that delivers software incrementally, prioritizing user functionality and continuously delivering it in short cycles"
    },
    {
        "difficulty": "1",
        "question": "What is Software Architecture?",
        "answers": [
            "functional properties",
            "the design of the system",
            "a computer or system that provides resources, data, services, or programs",
            "is the blueprint for a software systems construction and evolution"
        ],
        "correct_ans": "is the blueprint for a software systems construction and evolution"
    },
    {
        "difficulty": "2",
        "question": "In an ideal world scenario, what is the immediate action taken upon fixing every fault?",
        "answers": [
            "We fix every fault immediately",
            "We distribute fault reports to all sites",
            "We do not have the staff for instant maintenance",
            "It is cheaper to make a number of changes at the same time, particularly if there are multiple sites"
        ],
        "correct_ans": "We fix every fault immediately"
    },
    {
        "difficulty": "2",
        "question": "What true about Architectural patterns?",
        "answers": [
            "include description of patterns weakness only",
            "it is a set of architectural design decisions that are applicable to a recurring design problem",
            "include description of patterns strengths only",
            "description of bad practice, which has been tested in different systems"
        ],
        "correct_ans": "it is a set of architectural design decisions that are applicable to a recurring design problem"
    },
    {
        "difficulty": "3",
        "question": "what is the impact of an error categorized as Critical?",
        "answers": [
            "Causes inconvenience but no major effect",
            "Results in minor annoyance",
            "Affects operation but workaround exists",
            "Prevents essential capability"
        ],
        "correct_ans": "Prevents essential capability"
    },
    {
        "difficulty": "1",
        "question": "What does good software should include?",
        "answers": [
            "Maintainability , dependability and security",
            "Efficiency , acceptability, Maintainability, dependability and security",
            "dependability and security",
            "Efficiency , acceptability "
        ],
        "correct_ans": "Efficiency , acceptability, Maintainability, dependability and security"
    },
    {
        "difficulty": "1",
        "question": "Which method will we always prefer to use agile or waterfall?",
        "answers": [
            "Waterfall",
            "Agile",
            "We will never use them",
            "It depends on the project requirements"
        ],
        "correct_ans": "It depends on the project requirements"
    },
    {
        "difficulty": "3",
        "question": "What is not an Architectural pattern?",
        "answers": [
            "MVC pattern",
            "Layered architecture",
            "Factory design pattern",
            "Client-Server architecture"
        ],
        "correct_ans": "Factory design pattern"
    },
    {
        "difficulty": "1",
        "question": "What does Design decisions contain?",
        "answers": [
            "Non-functional properties",
            "Behavior and Interaction",
            "Structure",
            "All the answers are correct"
        ],
        "correct_ans": "All the answers are correct"
    },
    {
        "difficulty": "2",
        "question": "What is correct about Software maintenance?",
        "answers": [
            "normally involves major changes to the systems architecture",
            "Changes are implemented by modifying existing components and adding new components to the system",
            "Modifying a program before using it",
            "The term is used only for Generic software products"
        ],
        "correct_ans": "Changes are implemented by modifying existing components and adding new components to the system"
    },
    {
        "difficulty": "3",
        "question": "What are some challenges associated with domain requirements?",
        "answers": [
            "Project scheduling and time management",
            "Understandability and implicitness",
            "Team communication and collaboration",
            "Quality assurance and testingÂ strategies"
        ],
        "correct_ans": "Understandability and implicitness"
    },
    {
        "difficulty": "2",
        "question": "What type of testing ensures all components work together?",
        "answers": [
            "Integration testing",
            "System testing",
            "Acceptance testing",
            "Unit testing"
        ],
        "correct_ans": "Integration testing"
    },
    {
        "difficulty": "1",
        "question": "What usually causes a regression fault?",
        "answers": [
            "The documentation is incomplete",
            "The documentation is faulty",
            "There is no documentation at all",
            "all the options above are correct"
        ],
        "correct_ans": "all the options above are correct"
    },
    {
        "difficulty": "2",
        "question": "What method do Agile processes often rely on for code inspection?",
        "answers": [
            "Formal inspection meetings",
            "Pair programming",
            "Automated code analysis tools",
            "All answers are incorrect"
        ],
        "correct_ans": "Pair programming"
    },
    {
        "difficulty": "1",
        "question": "SDP is :",
        "answers": [
            "Software Deployment Protocol",
            "Software development plan",
            "Security Development Platform",
            "System Design Process"
        ],
        "correct_ans": "Software development plan"
    },
    {
        "difficulty": "2",
        "question": "What are the first steps in Agile software development?",
        "answers": [
            "It depends on the developers, they decide the first steps",
            "Developing user stories independently without customer involvement",
            "Coding and testing",
            "Creating a list of user stories and Setting priorities based on customer preferences"
        ],
        "correct_ans": "Creating a list of user stories and Setting priorities based on customer preferences"
    },
    {
        "difficulty": "1",
        "question": "What from these is not a Major skill required for corrective maintenance?",
        "answers": [
            "Superb diagnostic skills",
            "Superb Graphic design skills",
            "Superb documentation skills",
            "Superb testing skills"
        ],
        "correct_ans": "Superb Graphic design skills"
    },
    {
        "difficulty": "3",
        "question": "What is not considered as system maintenance?",
        "answers": [
            "Changing a system to fix bugs",
            "Maintenance to adapt software to a different operating environment",
            "Implementing a complete redesign of the system's user interface",
            "Modifying the system to satisfy new requirements"
        ],
        "correct_ans": "Implementing a complete redesign of the system's user interface"
    },
    {
        "difficulty": "1",
        "question": "What is the primary objective of black-box testing",
        "answers": [
            "To test individual components of the system",
            "To test the overall system functionality",
            "To test system performance under load",
            "To test the system against predefined specifications without knowledge of its internal structure"
        ],
        "correct_ans": "To test the system against predefined specifications without knowledge of its internal structure"
    },
    {
        "difficulty": "3",
        "question": "Choose the most accurate answer -Complete test coverage of a class involves:",
        "answers": [
            "Testing some operations associated with an object",
            "Setting and interrogating all object attributes",
            "Exercising the object in one state",
            "Testing part of the functionality"
        ],
        "correct_ans": "Setting and interrogating all object attributes"
    },
    {
        "difficulty": "2",
        "question": "How is the review process usually conducted in agile software development?",
        "answers": [
            "Iteration-based meetings like sprint reviews in Scrum",
            "Formal documentation and meetings",
            "By continuously monitoring standards compliance",
            "With weekly code review sessions"
        ],
        "correct_ans": "Iteration-based meetings like sprint reviews in Scrum"
    },
    {
        "difficulty": "2",
        "question": "Which of the following it is a type of review?",
        "answers": [
            "Inspections for defect removal (product)",
            "Reviews for progress assessment (product and process)",
            "Quality reviews (product and standards)",
            "All the answers are correct"
        ],
        "correct_ans": "All the answers are correct"
    },
    {
        "difficulty": "3",
        "question": "What is waterfall model?",
        "answers": [
            "An iterative and flexible software development methodology",
            "An approach that emphasizes the needs of the customer",
            "a method with prioritizing user functionality",
            "a sequential software development methodology that Based on completing each phase before moving on to the next phase"
        ],
        "correct_ans": "a sequential software development methodology that Based on completing each phase before moving on to the next phase"
    },
    {
        "difficulty": "1",
        "question": "it is possible to calculate the cost of removal of defects in a project?",
        "answers": [
            "no it's impossible",
            "yes, by given an estimation of the number of defects anticipated in a project",
            "maybe",
            "yes, absolutely"
        ],
        "correct_ans": "yes, by given an estimation of the number of defects anticipated in a project"
    },
    {
        "difficulty": "3",
        "question": "A software component is an architectural entity that:",
        "answers": [
            "encapsulates a subset of the systems functionality and/or data",
            "allows easy access to that subset via an explicitly defined interface",
            "has explicitly defined dependencies on its unrequired execution context",
            "tasked with effecting and regulating interactions among components"
        ],
        "correct_ans": "encapsulates a subset of the systems functionality and/or data"
    },
    {
        "difficulty": "2",
        "question": "What is the difference between black-box and white-box testing?",
        "answers": [
            "White-box testing focuses on internal code structures, while black-box testing focuses on external functionality",
            "White-box testing only involves manual testing, while black-box testing involves automated testing",
            "White-box testing is conducted by end-users, while black-box testing is conducted by developers",
            "White-box testing is only applicable to frontend testing, while black-box testing is applicable to both frontend and backend testing"
        ],
        "correct_ans": "White-box testing focuses on internal code structures, while black-box testing focuses on external functionality"
    },
    {
        "difficulty": "3",
        "question": "What is not true about Control flow graph?",
        "answers": [
            "if any part of the node is executed all will be executed",
            "Predicate node has true or false possibilities",
            "Selector node has less than two outlinks",
            "Junction node has two or more inlinks"
        ],
        "correct_ans": "Selector node has less than two outlinks"
    },
    {
        "difficulty": "2",
        "question": "What distinguishes user requirements from system requirements?",
        "answers": [
            "User requirements are for customers, system requirements are for contractors",
            "User requirements are detailed, system requirements are abstract",
            "User requirements have diagrams, system requirements have mathematical specifications",
            "User requirements define implementation, system requirements define constraints"
        ],
        "correct_ans": "User requirements define implementation, system requirements define constraints"
    },
    {
        "difficulty": "2",
        "question": "What is an example of an organizational requirement?",
        "answers": [
            "Execution speed",
            "Process standards used",
            "Reliability",
            "Response time"
        ],
        "correct_ans": "Process standards used"
    },
    {
        "difficulty": "3",
        "question": "What is a common difficulty faced by software engineers when dealing with domain requirements?",
        "answers": [
            "Complexity in mathematical computations",
            "Compliance with industry regulations",
            "Requirement for extensive user training",
            "Translation of specialized domain language"
        ],
        "correct_ans": "Translation of specialized domain language"
    },
    {
        "difficulty": "1",
        "question": "What do functional requirements describe?",
        "answers": [
            "Services the system should provide",
            "Properties and constraints of the system",
            "Constraints on system services",
            "Characteristics of the system architecture"
        ],
        "correct_ans": "Services the system should provide"
    },
    {
        "difficulty": "2",
        "question": "What is the purpose of a software requirements specification (SRS) document?",
        "answers": [
            "To document the internal design of the software",
            "To specify the functionality, performance, and design constraints of the software",
            " To outline the marketing strategy for the software product",
            "To provide user documentation for the software"
        ],
        "correct_ans": "To specify the functionality, performance, and design constraints of the software"
    }
]}